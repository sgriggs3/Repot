# Created by wy580477 for customized container <https://github.com/wy580477>
{
	admin off
	storage file_system /mnt/data/config/caddy
	log {
		exclude http.handlers.reverse_proxy
	}
}
{$CADDY_DOMAIN}:{$CADDY_WEB_PORT} {
	tls {$CADDY_EMAIL}
	encode gzip
	# Configure AriaNg
	handle {$GLOBAL_PORTAL_PATH}/ariang* {
		redir {$GLOBAL_PORTAL_PATH}/ariang {$GLOBAL_PORTAL_PATH}/ariang/
		uri strip_prefix {$GLOBAL_PORTAL_PATH}/ariang
		basicauth {
			{$GLOBAL_USER} HASH
		}
		root * /workdir/ariang
		file_server
	}
	# Configure qbittorrent
	handle {$GLOBAL_PORTAL_PATH}/qbit* {
		redir {$GLOBAL_PORTAL_PATH}/qbit {$GLOBAL_PORTAL_PATH}/qbit/
		uri strip_prefix {$GLOBAL_PORTAL_PATH}/qbit
		reverse_proxy * {
			to localhost:{$QBT_WEBUI_PORT}
			header_up Host "127.0.0.1:{$QBT_WEBUI_PORT}"
		}
	}
	# Direct /api to qBittorrent WebUI port, for connecting from services which don't support custom path.
	#handle /api* {       
	#        reverse_proxy * localhost:{$QBT_WEBUI_PORT}
	#}
	# Configure Vuetorrent   
	handle {$GLOBAL_PORTAL_PATH}/vue* {
		redir {$GLOBAL_PORTAL_PATH}/vue {$GLOBAL_PORTAL_PATH}/vue/
		uri strip_prefix {$GLOBAL_PORTAL_PATH}/vue
		handle /api* {
			reverse_proxy * {
				to localhost:{$QBT_WEBUI_PORT}
				header_up Host "127.0.0.1:{$QBT_WEBUI_PORT}"
			}
		}
		root * /workdir/vuetorrent/public
		file_server
	}
	# Configure Rclone Web UI
	handle {$GLOBAL_PORTAL_PATH}/rcloneweb* {
		redir {$GLOBAL_PORTAL_PATH}/rcloneweb {$GLOBAL_PORTAL_PATH}/rcloneweb/
		uri strip_prefix {$GLOBAL_PORTAL_PATH}/rcloneweb
		basicauth {
			{$GLOBAL_USER} HASH
		}
		root * /workdir/rcloneweb/build
		file_server
	}
	# Configure Rclone RC
	handle_path {$GLOBAL_PORTAL_PATH}/rclonerc {
		reverse_proxy * localhost:{$RCLONE_PORT}
	}
	# Configure Rclone Serve
	handle_path {$GLOBAL_PORTAL_PATH}/rclonerc/* {
		reverse_proxy * localhost:{$RCLONE_PORT}
	}
	# Configure Rclone Serve Webdav
	handle {$GLOBAL_PORTAL_PATH}/rclonedav* {
		redir {$GLOBAL_PORTAL_PATH}/rclonedav {$GLOBAL_PORTAL_PATH}/rclonedav/
		uri strip_prefix {$GLOBAL_PORTAL_PATH}/rclonedav
		reverse_proxy * localhost:{$RCLONE_WEBDAV_PORT}
	}
	# Configure Aria2 RPC
	handle {$GLOBAL_PORTAL_PATH}/jsonrpc {
		uri replace {$GLOBAL_PORTAL_PATH}/jsonrpc /jsonrpc
		reverse_proxy /jsonrpc localhost:{$ARIA2_PORT}
	}
	handle {$GLOBAL_PORTAL_PATH}/rpc {
		uri replace {$GLOBAL_PORTAL_PATH}/rpc /rpc
		reverse_proxy /rpc localhost:{$ARIA2_PORT}
	}
	# Configure Filebrowser
	handle {$GLOBAL_PORTAL_PATH}/files* {
		reverse_proxy {$GLOBAL_PORTAL_PATH}/files* localhost:{$FILEBROWSER_PORT}
	}
	# Configure metube
	handle {$GLOBAL_PORTAL_PATH}/metube* {
		redir {$GLOBAL_PORTAL_PATH}/metube {$GLOBAL_PORTAL_PATH}/metube/
		uri strip_prefix {$GLOBAL_PORTAL_PATH}/metube
		basicauth {
			{$GLOBAL_USER} HASH
		}
		reverse_proxy * localhost:{$METUBE_PORT}
	}
	# Configure pyload
	handle {$GLOBAL_PORTAL_PATH}/pyload* {
		redir {$GLOBAL_PORTAL_PATH}/pyload {$GLOBAL_PORTAL_PATH}/pyload/
		basicauth {
			{$GLOBAL_USER} HASH
		}
		reverse_proxy * localhost:{$PYLOAD_PORT}
	}
	# Configure OliveTin
	handle {$GLOBAL_PORTAL_PATH}/olivetin* {
		redir {$GLOBAL_PORTAL_PATH}/olivetin {$GLOBAL_PORTAL_PATH}/olivetin/
		uri strip_prefix {$GLOBAL_PORTAL_PATH}/olivetin
		basicauth {
			{$GLOBAL_USER} HASH
		}
		reverse_proxy * localhost:{$OLIVETIN_PORT}
	}
	# Configure homer
	handle {$GLOBAL_PORTAL_PATH}* {
		redir {$GLOBAL_PORTAL_PATH} {$GLOBAL_PORTAL_PATH}/
		uri strip_prefix {$GLOBAL_PORTAL_PATH}
		basicauth {
			{$GLOBAL_USER} HASH
		}
		root * /workdir/homer
		file_server
	}
}
